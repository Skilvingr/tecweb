//si occupa di creare l'oggetto con le informazioni della pagina corrente
function createObject(){

    //predo le informazioni
    obj[id]={};

    var title = document.getElementById("TitoloMissione").value;
    var text = document.getElementById("textS").value;
    var x = document.getElementById("buts").childElementCount;
    var buttons=x/4;
    var oldId=id;
    //creo l'oggetto
    obj[id].id=id;
    obj[id].title = title;
    obj[id].text = text;
    obj[id].numeroBottoni = buttons;
    console.log(obj);

    addExtra(buttons,obj[id].id);
    addScore(obj[id].id);
    id++;
    return oldId;
    console.log(obj);

}

//si occupa di aggiungere informazioni extra(destinations,alert,bridge,wrong)
function addExtra(buttons,id){
    obj[id].buttons=[];
    
    for(var i=1;i<buttons+1;i++){
	//controllo il tipo di bottone e lo aggiungo al mio oggetto
	var list=document.getElementById("listBut"+i).value;
	switch(list){

	case arrayBut[0]:
	    var destination=document.getElementById("input"+i).value;
	    obj[id].buttons[i-1]={};
	    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
	    obj[id].buttons[i-1].type="ContinueButton";
	    obj[id].buttons[i-1].destination=destination;
	    break;

	case arrayBut[1]:
	    var alert = document.getElementById("stop"+i).value;
	    obj[id].buttons[i-1]={};
	    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
	    obj[id].buttons[i-1].type="StopButton";
	    obj[id].buttons[i-1].alert=alert;
	    break;

	case arrayBut[2]:
	    obj[id].buttons[i-1]={};
	    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
	    obj[id].buttons[i-1].type="WrongButton";
	    obj[id].buttons[i-1].wrong="";
	    break;

	case arrayBut[3]:
	    var bridge = document.getElementById("listBridge"+i).value;
	    obj[id].buttons[i-1]={};
	    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
	    obj[id].buttons[i-1].type="BridgeButton";
	    obj[id].buttons[i-1].bridge=bridge;
	    break;

	default: break;
	}

    }
}
//inizializza le destinazioni
function initDestination(idObject){
    var buttons=obj[idObject].numeroBottoni;
    
    for(var i=1;i<buttons+1;i++){
	if(obj[idObject].buttons[i-1].type=="ContinueButton"){
	    obj[id]={};
	    obj[id].img="none";
	    obj[id].video="none";
	    var title=obj[idObject].buttons[i-1].destination;
	    obj[id].title = title;
	    obj[id].text = "";
	    obj[id].numeroBottoni = "0";
	    obj[id].buttons=[];
	    obj[id].id=id;
	    obj[id].branch = false;
	    obj[idObject].buttons[i-1].id=id;
	    id++;

	}
    }

}

//inizializzo l'albero(il grafico)
function createBranch(objectId){

    var buttonG = document.createElement("button");
    buttonG.setAttribute("id","buttonGraph"+ graphNumber);
    buttonG.textContent = obj[objectId].title;
    buttonG.setAttribute("onClick","populate(\""+ obj[objectId].id + "\")");

    var deleteButton = document.createElement("button");
    deleteButton.setAttribute("id", "deleteSingleButton" + graphNumber);
    deleteButton.innerHTML = "&#10007;";
    deleteButton.style.backgroundColor = "transparent";
    deleteButton.style.opacity = "1";
    deleteButton.style.color = "red";
    deleteButton.setAttribute("onClick", `deleteAllPage(${objectId})`);

    var ul=document.createElement("ul");
    ul.setAttribute("id","ulOrigin"+graphNumber);


    var li = document.createElement("li");
    li.setAttribute("id","liOrigin"+graphNumber);
    ul.appendChild(li);
    li.appendChild(buttonG);
//    li.appendChild(deleteButton);

    GraphView.appendChild(ul);

    //aggiungo l'id di li e ul al mio oggetto
    obj[objectId].idGraph=graphNumber;
    obj[objectId].branch = true;
    obj[objectId].status = "enabled";
    graphNumber++;


    //per ogni destinazione crea l'init nel grafo
    obj[objectId].buttons.forEach((button) => {
	if(button.type == "ContinueButton") {
    	    var ulExtra = document.createElement("ul");
	    ulExtra.setAttribute("id", "ulExtra" + graphNumber);
	    li.appendChild(ulExtra);

	    var liExtra = document.createElement("liExtra");
	    liExtra.setAttribute("id", "liExtra" + graphNumber);
	    ulExtra.appendChild(liExtra);

	    var buttonExtra = document.createElement("button");
	    buttonExtra.setAttribute("id", "buttonGraph" + graphNumber);
	    buttonExtra.textContent = button.destination
	    buttonExtra.setAttribute("onClick", "populate(\""+ button.id + "\")");


	    var deleteButton = document.createElement("button");
	    deleteButton.setAttribute("id", "deleteButton" + graphNumber);
	    deleteButton.innerHTML = "&#10007;";
	    deleteButton.style.backgroundColor = "transparent";
	    deleteButton.style.opacity = "1";
	    deleteButton.style.color = "yellow";
	    deleteButton.setAttribute("onClick", `deleteAllPage(${objectId})`);

	    liExtra.appendChild(deleteButton);
	    liExtra.appendChild(buttonExtra);
	    
	    var objectExtraId = button.id;
	    obj[objectExtraId].idGraph = graphNumber;
	    obj[objectExtraId].fatherIdGraph = obj[objectId].idGraph;
	}

	graphNumber++;
    });
    
    console.log(obj);
}

function addScore(id){
    var bottoni=obj[id].numeroBottoni;

    obj[id].buttons.forEach((button, index) => button.score = document.getElementById("score" + index + 1).value);
}

//aggiusta la struttura con i dati della nuova pagina
function controlButtonNewObject(id){

    var x = document.getElementById("buts").childElementCount;
    var buttons=x/4;
    alert(buttons);
    var oldButtons=obj[id].numeroBottoni;
    alert(oldButtons);
    var i=1;
    var a=0;
    
    //tre casi bottoni=0 bottoniattuali < bottoni vecchi  bottoni attuali > bottoni vecchi

    if(buttons==0){
	while(i<oldButtons+1){

            if(obj[id].buttons[i-1].type=="ContinueButton"){
		deleteButtonGraph(obj[id].buttons[i-1].id);
		deleteButtons(obj[id].buttons[i-1].id);
            }
            delete obj[id].buttons[i-1];
            i++;
            obj[id].numeroBottoni=0;
	}
	console.log(obj);
    }

    else if(buttons<oldButtons){
	var temp=buttons;
	//elimina i bottoni in più
	while(temp<oldButtons){

            temp++;

            if(obj[id].buttons[temp-1].type=="ContinueButton"){
		deleteButtonGraph(obj[id].buttons[temp-1].id);
		deleteButtons(obj[id].buttons[temp-1].id);
            }
            delete obj[id].buttons[temp-1];
	}

	controlDestination(obj[id].id,buttons);

	obj[id].numeroBottoni=buttons;
	modifyButtons(obj[id].id,buttons,oldButtons);

	console.log(obj);

    }else if(buttons>oldButtons){

	temp=oldButtons;
	//controllo le destinazioni
	controlDestination(obj[id].id,oldButtons);

	obj[id].numeroBottoni=buttons;
	modifyButtons(obj[id].id,buttons,oldButtons);

	obj[id].numeroBottoni=buttons;
	console.log(obj);

    }else if(buttons==oldButtons){

	temp=buttons;
	controlDestination(obj[id].id,buttons);

	obj[id].numeroBottoni=buttons;
	modifyButtons(obj[id].id,buttons,oldButtons);

	obj[id].numeroBottoni=buttons;

	console.log(obj);

    }
}

//aggiorna i bottoni con le informazioni correnti
function modifyButtons(id, buttons, oldButtons){
    tempId = parseInt(id);
    parseInt(buttons);
    parseInt(oldButtons);
    console.log("id " + tempId);
    console.log("nuovi " + buttons);
    console.log("vecchi " + oldButtons);
    if(buttons > oldButtons){
	//controlli se tra quelli vecchi sono state aggiunte destinazioni
	for(var i = 1;i<oldButtons+1;i++){

	    var list=document.getElementById("listBut"+i).value;
	    //se sono uguali resetto i valori nel caso sia cambiata la destinazione
	    if(obj[tempId].buttons[i-1].type=="ContinueButton"&&list==arrayBut[0]){
		console.log("gianni");
		var destination=document.getElementById("input"+i).value;
		obj[tempId].buttons[i-1].text=document.getElementById("button"+i).value;
		obj[tempId].buttons[i-1].destination=destination;
		var idDest=obj[tempId].buttons[i-1].id;
		obj[idDest].title=destination;
	    }
	    //controllo se è stata aggiunta una destinazione
	    else if (obj[tempId].buttons[i-1]!="ContinueButton"&&list==arrayBut[0]){
		var destination=document.getElementById("input"+i).value;
		obj[tempId].buttons[i-1].type="ContinueButton";
		obj[tempId].buttons[i-1].destination=destination;
		obj[tempId].buttons[i-1].text=document.getElementById("button"+i).value;
		var newId=addDestination(destination);
		
		console.log("tempId = "+tempId);
		console.log("i = "+i);
		
		obj[tempId].buttons[i-1].id=newId;
		modifyGraph(newId,id,i);
	    }else{
		switch(list){

		case arrayBut[1]:
		    delete obj[id].buttons[i-1];
		    var alert = document.getElementById("stop"+i).value;
		    obj[id].buttons[i-1]={};
		    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
		    obj[id].buttons[i-1].type="StopButton";
		    obj[id].buttons[i-1].alert=alert;
		    break;
		case arrayBut[2]:
		    delete obj[id].buttons[i-1];
		    obj[id].buttons[i-1]={};
		    obj[id].buttons[i-1].type="WrongButton";
		    obj[id].buttons[i-1].wrong="";
		    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
		    break;
		case arrayBut[3]:
		    delete obj[id].buttons[i-1];
		    var bridge = document.getElementById("listBridge"+i).value;
		    obj[id].buttons[i-1]={};
		    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
		    obj[id].buttons[i-1].type="BridgeButton";
		    obj[id].buttons[i-1].bridge=bridge;
		    break;

		default: break;

		}

	    }
	}
	//va dai vecchi bottoni fino a quelli nuovi
	for(var j=parseInt(oldButtons)+1;j<buttons+1;j++){
	    console.log("j è "+j)
            var list2=document.getElementById("listBut"+j).value;

            switch(list2){
            case arrayBut[0]:
		var destination=document.getElementById("input"+j).value;
		obj[tempId].buttons[j-1]={};
		obj[id].buttons[j-1].text=document.getElementById("button"+j).value;
		obj[tempId].buttons[j-1].type="ContinueButton"
		obj[tempId].buttons[j-1].destination=destination;

		var newId=addDestination(destination);
		obj[tempId].buttons[j-1].id=newId;
		modifyGraph(id,newId,j);
		break;
            case arrayBut[1]:
		var alert = document.getElementById("stop"+j).value;
		obj[id].buttons[j-1]={};
		obj[id].buttons[j-1].text=document.getElementById("button"+j).value;
		obj[id].buttons[j-1].type="StopButton";
		obj[id].buttons[j-1].alert=alert;
		break;
            case arrayBut[2]:
		obj[id].buttons[j-1]={};
		obj[id].buttons[j-1].type="WrongButton";
		obj[id].buttons[j-1].wrong="";
		obj[id].buttons[j-1].text=document.getElementById("button"+j).value;
		break;
            case arrayBut[3]:
		var bridge = document.getElementById("listBridge"+j).value;
		obj[id].buttons[j-1]={};
		obj[id].buttons[j-1].text=document.getElementById("button"+j).value;
		obj[id].buttons[j-1].type="BridgeButton";
		obj[id].buttons[j-1].bridge=bridge;
		break;

            default: break;

            }
	}
    }else{
	//esegue il controllo su tutti i bottoni
	for(i=1;i<buttons+1;i++){

	    var list=document.getElementById("listBut"+i).value;
	    //se sono uguali resetto i valori nel caso sia cambiata la destinazione
	    if(obj[tempId].buttons[i-1].type=="ContinueButton"&&list==arrayBut[0]){
		var destination=document.getElementById("input"+i).value;
		obj[tempId].buttons[i-1].destination=destination;
		var idDest=obj[tempId].buttons[i-1].id;
		obj[idDest].title=destination;
	    }
	    //controllo se è stata aggiunta una destinazione
	    else if (obj[tempId].buttons[i-1]!="ContinueButton"&&list==arrayBut[0]){
		var destination=document.getElementById("input"+i).value;
		obj[tempId].buttons[i-1].type="ContinueButton"
		obj[tempId].buttons[i-1].destination=destination;
		var newId=addDestination(destination);
		console.log("tempId = "+tempId);
		console.log("i = "+i);
		obj[tempId].buttons[i-1].id=newId;
		modifyGraph(id,newId,i);
	    }else{
		switch(list){

		case arrayBut[1]:
		    delete obj[id].buttons[i-1];
		    var alert = document.getElementById("stop"+i).value;
		    obj[id].buttons[i-1]={};
		    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
		    obj[id].buttons[i-1].type="StopButton";
		    obj[id].buttons[i-1].alert=alert;
		    break;
		case arrayBut[2]:
		    delete obj[id].buttons[i-1];
		    obj[id].buttons[i-1]={};
		    obj[id].buttons[i-1].type="WrongButton";
		    obj[id].buttons[i-1].wrong="";
		    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
		    break;
		case arrayBut[3]:
		    delete obj[id].buttons[i-1];
		    var bridge = document.getElementById("listBridge"+i).value;
		    obj[id].buttons[i-1]={};
		    obj[id].buttons[i-1].text=document.getElementById("button"+i).value;
		    obj[id].buttons[i-1].type="BridgeButton";
		    obj[id].buttons[i-1].bridge=bridge;
		    break;

		default: break;

		}

	    }

	}
    }

}

function controlDestination(id,buttons){

    var i=1;

    //modifica i bottoni attuali
    while(i<buttons+1){
	var list=document.getElementById("listBut"+i).value;
	//se non è stato modificato controlla che non sia stato modificato anche il titolo della destinazione
	if(obj[id].buttons[i-1].type=="ContinueButton"&&list==arrayBut[0]){

            var input = document.getElementById("input"+i).value;
            if(input!=obj[id].buttons[i-1].destination){
		obj[id].buttons[i-1].destination=input;
		//modifica il nome nel grafo
		modifyGraphText(obj[id].buttons[i-1].id,input);
		obj[id].buttons[i-1].id;
            }

	}
        //controlla se la destinazione esiste ancora
        else if(obj[id].buttons[i-1].type=="ContinueButton"&&list!=arrayBut[0]){

            alert(list);
            deleteButtonGraph(obj[id].buttons[i-1].id);
            deleteButtons(obj[id].buttons[i-1].id);
	}

	i++;

    }
    console.log(obj);

}

//aggiungo una destinazione
function addDestination(destination){

    var oldId=id;
    console.log("id destination = "+id);
    obj[id]={};
    obj[id].title = destination;
    obj[id].text = "";
    obj[id].numeroBottoni = "0";
    obj[id].buttons=[];
    obj[id].id=id;
    obj[id].branch = false;
    id++;

    return obj[oldId].id;
}

//modifica i nomi dei bottoni del grafo se cambiano i nomi delle destinazioni
function modifyGraphText(id,text){

    var graphId=obj[id].idGraph;
    var button=document.getElementById("buttonGraph"+ graphId);
    button.textContent=text;
}

function deleteButtons(id){
    console.log(`id : ${id}`);
    var numButtons = obj[id].numeroBottoni;

    /////////////////////////////////////////////////////////////////
    // for(var i=1;i<numButtons+1;i++){				   //
    // 	var numberButton="Button"+i;				   //
    // 								   //
    // 	if(father[numberButton].type=="ContinueButton"){	   //
    // 								   //
    //         var child = obj[id].buttons[i-1].id;		   //
    //         deleteButtons(child);				   //
    // 								   //
    // 	}							   //
    // 								   //
    // }							   //
    /////////////////////////////////////////////////////////////////

    obj[id].buttons
	.filter((button) => button.type === "ContinueButton")
	.forEach((button) => {
	    deleteButtons(button.id);
	    obj[id].numeroBottoni--;
	});
    
    delete obj[id];

}

function deleteSingleButton(objId, buttonPos) {
    delete obj[objId].buttons[buttonPos];
    obj[objId].numeroBottoni--;
}

function deleteButtonGraph(id){
    var father = obj[id].fatherIdGraph;
    var num=obj[id].idGraph;
    alert(father);

    var ul=document.getElementById("ulExtra"+num);

    try{
        var li = document.getElementById("liOrigin"+father);
        li.removeChild(ul);
    }catch(err){}

    try{
        var li = document.getElementById("liExtra"+father);
        li.removeChild(ul);
    }catch(err){}
    //var li = document.getElementById("liExtra"+father);

    //console.log(ul);

    //li.removeChild(ul);

}

function modifyGraph(id,idDest,i){

    var graphId=obj[id].idGraph;
    if(obj[id].branch==true)
	var li=document.getElementById("liOrigin"+graphId);
    else
	var li=document.getElementById("liExtra"+graphId);

    var ulExtra=document.createElement("ul");
    ulExtra.setAttribute("id","ulExtra"+graphNumber);

    li.appendChild(ulExtra);

    var liExtra = document.createElement("liExtra");
    liExtra.setAttribute("id","liExtra"+graphNumber);
    ulExtra.appendChild(liExtra);

    var buttonExtra = document.createElement("button");
    buttonExtra.setAttribute("id","buttonGraph"+ graphNumber);
    console.log("id è "+id);
    buttonExtra.textContent=obj[id].buttons[i].destination

    liExtra.appendChild(buttonExtra);
    obj[idDest].idGraph=graphNumber;
    obj[idDest].fatherIdGraph=obj[id].idGraph;

    buttonExtra.setAttribute("onClick","populate(\""+ obj[id].buttons[i].id + "\")");

    graphNumber++;
}
